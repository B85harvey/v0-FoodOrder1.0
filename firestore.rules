rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isTeacher() {
      return isAuthenticated() && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'teacher';
    }
    
    function isStudent() {
      return isAuthenticated() && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'student';
    }
    
    function belongsToUser() {
      return isAuthenticated() && resource.data.userId == request.auth.uid;
    }
    
    function belongsToClass(classId) {
      return isAuthenticated() && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.classId == classId;
    }
    
    // Users collection
    match /users/{userId} {
      // Users can read and update their own profiles
      allow read, update: if isAuthenticated() && request.auth.uid == userId;
      // Only teachers can create new users, or users can create their own profile
      allow create: if isTeacher() || request.auth.uid == userId;
    }
    
    // Classes collection
    match /classes/{classId} {
      // Anyone authenticated can read classes
      allow read: if isAuthenticated();
      // Only teachers can create, update, or delete classes
      allow create, update, delete: if isTeacher();
    }
    
    // Recipes collection
    match /recipes/{recipeId} {
      // Anyone authenticated can read recipes
      allow read: if isAuthenticated();
      // Only teachers can create, update, or delete recipes
      allow create, update, delete: if isTeacher();
    }
    
    // Inventory collection
    match /inventory/{itemId} {
      // Anyone authenticated can read inventory
      allow read: if isAuthenticated();
      // Only teachers can create, update, or delete inventory items
      allow create, update, delete: if isTeacher();
    }
    
    // Orders collection
    match /orders/{orderId} {
      // Teachers can read all orders
      allow read: if isTeacher();
      // Students can only read their own orders
      allow read: if isStudent() && resource.data.studentId == request.auth.uid;
      // Students can create orders for themselves
      allow create: if isStudent() && request.resource.data.studentId == request.auth.uid;
      // Students can update their own orders, teachers can update any
      allow update: if isTeacher() || (isStudent() && resource.data.studentId == request.auth.uid);
      // Only teachers can delete orders
      allow delete: if isTeacher();
    }
    
    // Shopping Lists collection
    match /shoppingLists/{listId} {
      // Only teachers can read, create, update, or delete shopping lists
      allow read, create, update, delete: if isTeacher();
    }
    
    // Notifications collection
    match /notifications/{notificationId} {
      // Users can only read their own notifications
      allow read: if isAuthenticated() && resource.data.userId == request.auth.uid;
      // Users can update their own notifications (mark as read)
      allow update: if isAuthenticated() && resource.data.userId == request.auth.uid;
      // Only system/functions can create notifications
      allow create: if false; // This will be handled by Cloud Functions
    }
  }
}
